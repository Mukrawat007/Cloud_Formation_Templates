AWSTemplateFormatVersion: "2010-09-09"
Description: This template will create 2 EC2 instances, one is Ansible controller and the other one is node.

Parameters:
  MyEC2Key:
    Description: The following key will be attached to the instance.
    Type: AWS::EC2::KeyPair::KeyName


  MyAvailabilityZone:
    Description: Select one AZ among the following AZs.
    Type: String
    Default: us-east-2a
    AllowedValues: 
      - us-east-2a
      - us-east-2b
      - us-east-2c

  MyInstanceType:
    Description: Select type among the following instances.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium

Resources:
#Description: This ec2 will have tomcat installed/running in it.
  AnsibleController:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-0dacb0c129b49f529
      InstanceType: !Ref MyInstanceType
      KeyName: !Ref MyEC2Key
      AvailabilityZone: !Ref MyAvailabilityZone
      SecurityGroups: 
        - !Ref SecGrp
      Tags:
        - Key: Name
          Value: Ansible_Controller
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo yum update -y
            sudo amazon-linux-extras install epel -y
            sudo yum install ansible -y
            sudo sed -ie "s/#host_key_checking = False/host_key_checking = False/g" /etc/ansible/ansible.cfg
            
### How to grep the IP of the node if it is a variable ???????? ################################
# Or may be we have to be a little manual here !!!!!!!!! 

  AnsibleNode:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        config:
          #packages:
          #  yum:
          #  files:
          commands:
            test1: 
              command: 'sed -ie "s/PasswordAuthentication no/PasswordAuthentication yes/"  /etc/ssh/sshd_config'
              cwd: "/etc/ssh/"
              ignoreErrors: "false"
              
          #services:
          #  sysvinit:
          #    sshd:
          #      enabled: "true"
          #      ensureRunning: "true"  
          #      files:
          #        - "/etc/ssh/sshd_config"
          #      sources: 
          #        - "/etc/ssh/"

    Properties:
      ImageId: ami-0dacb0c129b49f529
      InstanceType: !Ref MyInstanceType
      KeyName: !Ref MyEC2Key
      AvailabilityZone: !Ref MyAvailabilityZone 
      SecurityGroups:
        - !Ref SecGrp 
      Tags:
        - Key: Name
          Value: Ansible_Node
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo yum update -y
            echo -e "passwd\npasswd" | sudo passwd ec2-user
            sudo yum update -y aws-cfn-bootstarp
            sudo /opt/aws/bin/cfn-init -s ${AWS::StackName}  -r AnsibleNode  --region ${AWS::Region}
            sudo systemctl restart sshd
  SecGrp:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: This Security Goup will be attached to the Ansible machine.
      SecurityGroupIngress:
        - IpProtocol: tcp
          ToPort: '22'
          FromPort: '22'
          CidrIp: 0.0.0.0/0AWSTemplateFormatVersion: "2010-09-09"
Description: This template will create 2 EC2 instances, one is Ansible controller and the other one is node.

Parameters:
  MyEC2Key:
    Description: The following key will be attached to the instance.
    Type: AWS::EC2::KeyPair::KeyName


  MyAvailabilityZone:
    Description: Select one AZ among the following AZs.
    Type: String
    Default: us-east-2a
    AllowedValues: 
      - us-east-2a
      - us-east-2b
      - us-east-2c

  MyInstanceType:
    Description: Select type among the following instances.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium

Resources:
#Description: This ec2 will have tomcat installed/running in it.
  AnsibleController:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-0dacb0c129b49f529
      InstanceType: !Ref MyInstanceType
      KeyName: !Ref MyEC2Key
      AvailabilityZone: !Ref MyAvailabilityZone
      SecurityGroups: 
        - !Ref SecGrp
      Tags:
        - Key: Name
          Value: Ansible_Controller
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo yum update -y
            sudo amazon-linux-extras install epel -y
            sudo yum install ansible -y
            sudo sed -ie "s/#host_key_checking = False/host_key_checking = False/g" /etc/ansible/ansible.cfg
            
### How to grep the IP of the node if it is a variable ???????? ################################
# Or may be we have to be a little manual here !!!!!!!!! 

  AnsibleNode:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        config:
          #packages:
          #  yum:
          #  files:
          commands:
            test1: 
              command: 'sed -ie "s/PasswordAuthentication no/PasswordAuthentication yes/"  /etc/ssh/sshd_config'
              cwd: "/etc/ssh/"
              ignoreErrors: "false"
              
          #services:
          #  sysvinit:
          #    sshd:
          #      enabled: "true"
          #      ensureRunning: "true"  
          #      files:
          #        - "/etc/ssh/sshd_config"
          #      sources: 
          #        - "/etc/ssh/"

    Properties:
      ImageId: ami-0dacb0c129b49f529
      InstanceType: !Ref MyInstanceType
      KeyName: !Ref MyEC2Key
      AvailabilityZone: !Ref MyAvailabilityZone 
      SecurityGroups:
        - !Ref SecGrp 
      Tags:
        - Key: Name
          Value: Ansible_Node
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo yum update -y
            echo -e "passwd\npasswd" | sudo passwd ec2-user
            sudo yum update -y aws-cfn-bootstarp
            sudo /opt/aws/bin/cfn-init -s ${AWS::StackName}  -r AnsibleNode  --region ${AWS::Region}
            sudo systemctl restart sshd
  SecGrp:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: This Security Goup will be attached to the Ansible machine.
      SecurityGroupIngress:
        - IpProtocol: tcp
          ToPort: '22'
          FromPort: '22'
          CidrIp: 0.0.0.0/0
